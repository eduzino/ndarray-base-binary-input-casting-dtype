"use strict";var v=function(r,e){return function(){return e||r((e={exports:{}}).exports,e),e.exports}};var g=v(function(F,o){
var T=require('@stdlib/ndarray-base-assert-is-floating-point-data-type/dist'),E=require('@stdlib/ndarray-base-assert-is-signed-integer-data-type/dist'),_=require('@stdlib/ndarray-base-assert-is-unsigned-integer-data-type/dist'),f=require('@stdlib/ndarray-base-assert-is-data-type/dist'),u=require('@stdlib/ndarray-base-promote-dtypes/dist'),i=require('@stdlib/ndarray-defaults/dist'),D=require('@stdlib/array-base-join/dist'),s=require('@stdlib/error-tools-fmtprodmsg/dist'),m=i.get("dtypes.signed_integer"),p=i.get("dtypes.unsigned_integer"),q=i.get("dtypes.real_floating_point");function I(r,e,a,t){var n;if(t==="none")return r;if(t==="output")return a;if(t==="promoted"){if(n=u([r,e,a]),n===null)throw new Error(s("invalid operation. Unable to promote the input and output data types. Input data types: [%s]. Output data type: %s.",D([r,e],", "),a));return n}if(t==="accumulation")return T(r)||r==="generic"?r:_(r)?u([r,p]):E(r)?u([r,m]):q;if(f(t))return t;throw new TypeError(s("invalid argument. Fourth argument must be a supported casting policy. Value: `%s`.",t))}o.exports=I
});var l=g();module.exports=l;
/** @license Apache-2.0 */
//# sourceMappingURL=index.js.map
